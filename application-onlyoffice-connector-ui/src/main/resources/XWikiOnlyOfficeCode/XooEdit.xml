<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="XWikiOnlyOfficeCode.XooEdit" locale="">
  <web>XWikiOnlyOfficeCode</web>
  <name>XooEdit</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>xwiki:XWiki.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set ($OO_CONF_REF = $services.model.createDocumentReference('', 'XWikiOnlyOfficeCode', 'ConfigurationClass'))
#set ($OO_CONF_DOC = $xwiki.getDocument($OO_CONF_REF))
#set ($OO_CONF_OBJ = $OO_CONF_DOC.getObject('XWikiOnlyOfficeCode.ConfigurationClass'))
#set ($OO_USE_GLOBAL_CONFIG = $OO_CONF_OBJ.getProperty('useGlobalConfig').getValue())
#if ("$!OO_USE_GLOBAL_CONFIG" != "0" )
  #set ($OO_CONF_REF = $services.model.createDocumentReference($xcontext.getMainWikiName(), 'XWikiOnlyOfficeCode', 'ConfigurationClass'))
  #set ($OO_CONF_DOC = $xwiki.getDocument($OO_CONF_REF))
  #set ($OO_CONF_OBJ = $OO_CONF_DOC.getObject('XWikiOnlyOfficeCode.ConfigurationClass'))
#end
#set ($OO_SERVER = $OO_CONF_OBJ.getProperty('onlyOfficeServer').getValue())
#set ($ALLOW_REALTIME = $OO_CONF_OBJ.getProperty('enableRealtime').getValue())
#if ("$!OO_SERVER" == '')
  #set ($OO_SERVER = 'https://onlyoffice.xwiki.com')
#end
#set ($CONVERTABLE_FILETYPES0 = {
  '.docx': ['.doc', '.odt', '.html', '.htm', '.rtf', '.txt', '.mht'],
  '.xlsx': ['.xls', '.ods', '.csv'],
  '.pptx': ['.ppt', '.odp', '.ppsx']
})
#set ($EDITABLE_FILETYPES = ['.docx', '.xlsx', '.pptx'])
##
#if ("$!request.document" == '')
  $services.localization.render('xoo.validation.documentMissing')
#else
  #set ($docu = $xwiki.getDocument($request.document))
  #if ("$!request.filename" == '')
    $services.localization.render('xoo.validation.filenameMissing')
  #else
    #set ($filename = $request.filename)
    #set ($fileType = $filename.substring($filename.lastIndexOf('.')))
    #set ($attachment = $docu.getAttachment($request.filename))
    #if (!$attachment &amp;&amp; "$!request.new" == '1' &amp;&amp; $EDITABLE_FILETYPES.contains($fileType))
      ## Get the empty example file corresponding to the current locale.
      #set ($templatesDoc = $xwiki.getDocument('XWikiOnlyOfficeCode.Templates'))
      #set ($emptyAttachment = $templatesDoc.getAttachment("empty_${xcontext.locale}${fileType}"))
      #if (!$emptyAttachment)
        ## Fallback on default empty example file(en).
        #set ($emptyAttachment = $doc.getAttachment("empty${fileType}"))
      #end
      #if ($emptyAttachment)
        #set ($attachment = $docu.addAttachment($filename, $emptyAttachment.getContentAsBytes()))
        #set ($discard = $docu.save("Add new attachment: $filename"))
      #end
    #end
  #end
#end
#if (!$attachment)
  $services.localization.render('xoo.validation.attachmentMissing')
#else
  #set ($mode = 'edit')
  #set ($fileNoType = $filename.substring(0, $filename.lastIndexOf('.')))
  #set ($fileType = $filename.substring($filename.lastIndexOf('.')))
  #if (!$EDITABLE_FILETYPES.contains($fileType))
    #set ($convertableFiletypes = {})
    #foreach ($key in $CONVERTABLE_FILETYPES0.keySet())
      #foreach ($val in $CONVERTABLE_FILETYPES0[$key])
        #set ($discard = $convertableFiletypes.put("$val", "$key"))
      #end
    #end
    #if (!$docu.hasAccessLevel('edit'))
      #set ($mode = 'view')
    #elseif ("$!convertableFiletypes.get($fileType)" != '')
      #set ($convertableTo = "$!convertableFiletypes.get($fileType)")
      #set ($convFilename = "${fileNoType}${convertableTo}")
      #set ($convAttach = $docu.getAttachment($convFilename))
      #if ("$!convAttach" != '')
        #set ($mode = 'convExists')
      #else
        #set ($mode = 'convertable')
      #end
    #else
      #set ($mode = 'view')
    #end
  #end
  #if ($mode == 'edit')
    #set ($currentAction = "$services.localization.render('editing') ")
    #set ($canEdit = true)
  #else
    #set ($currentAction = '')
    #set ($canEdit = false)
  #end
  {{html clean=false}}
  &lt;!DOCTYPE html&gt;
  &lt;html id="ooFrame"&gt;
    &lt;head&gt;
      &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
      &lt;title&gt;${currentAction}$escapetool.xml($request.filename)&lt;/title&gt;
      #template('stylesheets.vm')

      ## Old IE
      &lt;link rel="shortcut icon" href="$xwiki.getSkinFile('icons/xwiki/favicon.ico')" /&gt;
      ## Present, HTML5
      &lt;link rel="icon" href="$xwiki.getSkinFile('icons/xwiki/favicon16.png')" type="image/png" /&gt;
      ## The future, scalable icons
      &lt;link rel="icon" href="$xwiki.getSkinFile('icons/xwiki/favicon.svg')" type="image/svg+xml" /&gt;
      ## For smart phones and tablets
      &lt;link rel="apple-touch-icon" href="$xwiki.getSkinFile('icons/xwiki/favicon144.png')" /&gt;

      &lt;script type="text/javascript" src="$services.webjars.url('requirejs', 'require.min.js')"&gt;&lt;/script&gt;
      &lt;script type="text/javascript" language="javascript"&gt;
        require.config({
          paths: {
            'jquery': "$services.webjars.url('jquery', 'jquery.min.js')"
          }
        });
        require.onError = function(err) {
          var div = document.getElementById('iframeEditor');
          if (!div) {
            return;
          }
          var p = div.getElementsByTagName('p');
          if (p.length) {
            p[0].innerHTML = err;
          }
        }
        require(["$services.webjars.url('com.xwiki.onlyoffice-connector:application-onlyoffice-connector-webjar', 'xwiki-onlyoffice.js', { 'cb': 'dateOfToday'})".replace('dateOfToday', new Date().getTime())], function (oojs) {
          oojs({
            ATTACH_URL: "$docu.getAttachmentURL($filename,'download','cb=dateOfToday')".replace('dateOfToday', new Date().getTime()),
            FILEUPLOAD_URL: "${OO_SERVER}/FileUploader.ashx",

            // Realtime
            ALLOW_REALTIME: "$!ALLOW_REALTIME" === '1',
            OOAPI_PATH: "${OO_SERVER}/web-apps/apps/api/documents/api.js",
            GETKEY_URL: "$xwiki.getURL('XWikiOnlyOfficeCode.GetKeys', 'jsx')",

            // services.rest.url() doesn't work with an attachment ref
            REST_DOC_URL: "$services.rest.url($docu.documentReference)",

            DOC_REFERENCE: "$docu.documentReference",
            FILENAME: "$filename",
            CREATION_DATE: "$datetool",
            USERNAME: "$xcontext.user",
            USERPRETTYNAME: "$xwiki.getUserName($xcontext.user, false)",
            CANEDIT: "$canEdit",
            LANG: "$xcontext.locale",
            CSRF_TOKEN: "$services.csrf.token",
            DOCU_VIEW_URL: "$docu.URL"
          });
        });
      &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
      &lt;div class="saveBar"&gt;
        &lt;div class="meta-versionSummary metamodifs"&gt;
          &lt;table class="saveBarTable" style="width:100%"&gt;
            &lt;tr style="width:100%"&gt;
              &lt;td style="vertical-align: middle"&gt;
                &lt;a href="${xwiki.getURL('Main.WebHome')}"&gt;&lt;img src="$xwiki.getSkinFile('logo.svg')"&gt;&lt;/a&gt;
              &lt;/td&gt;
              &lt;td style="vertical-align: middle"&gt;
                &lt;strong&gt;$currentAction&lt;/strong&gt;
                &lt;em&gt;$request.filename&lt;/em&gt;
                $services.localization.render('xoo.inFrameContent.onPage')
                &lt;a href="${docu.URL}#Attachments" title="$services.localization.render('cancel')"&gt;$docu.displayTitle&lt;/a&gt;
              &lt;/td&gt;
              &lt;td style="text-align: right; vertical-align: middle"&gt;
                &lt;form id="buttonsForm" onsubmit="return false;"&gt;
                  #if ($mode == 'edit')
                    &lt;input id="button-sac" class="btn btn-primary" type="submit" value="$services.localization.render('saveandcontinue')" /&gt;
                    &lt;input id="button-sav" class="btn btn-success" type="submit" value="$services.localization.render('saveandview')" /&gt;
                  #elseif ($mode == 'convExists')
                    &lt;input id="button-ecv" class="btn btn-success" type="submit"
                      value="$services.localization.render('xoo.inFrameContent.editConvertibleVersion.value', [$convertableTo])"
                      title="$services.localization.render('xoo.inFrameContent.editConvertibleVersion.title', [$fileType, $convFilename])"
                    /&gt;
                  #elseif ($mode == 'convertable')
                    &lt;input id="button-cnv" class="btn btn-success" type="submit" data-convertableto="$convertableTo"
                      value="$services.localization.render('xoo.inFrameContent.convertForEditing.value', [$convertableTo])"
                      title="$services.localization.render('xoo.inFrameContent.convertForEditing.title', [$convertableTo])"
                    /&gt;
                  #end
                  &lt;input id="button-cancel" class="btn btn-default" type="submit" name="action_cancel" value="$services.localization.render('cancel')" data-redirect-to="${docu.URL}#Attachments" /&gt;
                &lt;/form&gt;
              &lt;/td&gt;
            &lt;/tr&gt;
          &lt;/table&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="form"&gt;
        &lt;div id="iframeEditor"&gt;
          &lt;p&gt;
            $services.localization.render('xoo.inFrameContent.loading')&lt;img src="$xwiki.getSkinFile('resources/icons/xwiki/spinner.gif', true)" /&gt;
          &lt;/p&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="xnotification-container"&gt;
        &lt;div style="display:none;" class="xnotification xnotification-inprogress"&gt;
          $services.localization.render('core.editors.saveandcontinue.notification.inprogress')
        &lt;/div&gt;
        &lt;div style="display:none;" class="xnotification xnotification-done"&gt;
          $services.localization.render('core.editors.saveandcontinue.notification.done')
        &lt;/div&gt;
        &lt;div style="display:none;" class="xnotification xnotification-error"&gt;
          $services.localization.render("core.editors.saveandcontinue.notification.error", ["&lt;span id='ajaxRequestFailureReason'/&gt;"])
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/body&gt;
  &lt;/html&gt;
  {{/html}}
#end
{{/velocity}}</content>
  <attachment>
    <filename>empty.docx</filename>
    <mimetype>application/vnd.openxmlformats-officedocument.wordprocessingml.document</mimetype>
    <charset>UTF-8</charset>
    <author>xwiki:XWiki.Admin</author>
    <version>1.1</version>
    <comment/>
    <content></content>
    <filesize>6940</filesize>
  </attachment>
  <attachment>
    <filename>empty.pptx</filename>
    <mimetype>application/vnd.openxmlformats-officedocument.presentationml.presentation</mimetype>
    <charset>UTF-8</charset>
    <author>xwiki:XWiki.Admin</author>
    <version>1.1</version>
    <comment/>
    <content></content>
    <filesize>33744</filesize>
  </attachment>
  <attachment>
    <filename>empty.xlsx</filename>
    <mimetype>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</mimetype>
    <charset>UTF-8</charset>
    <author>xwiki:XWiki.Admin</author>
    <version>1.1</version>
    <comment/>
    <content>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</content>
    <filesize>5612</filesize>
  </attachment>
  <object>
    <name>XWikiOnlyOfficeCode.XooEdit</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>a03f2817-946c-44b9-a7b8-ff52cf1d6831</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache/>
    </property>
    <property>
      <code>// Velocity
#set($OO_CONF_REF = $services.model.createDocumentReference('', 'XWikiOnlyOfficeCode', 'ConfigurationClass'))
#set($OO_CONF_DOC = $xwiki.getDocument($OO_CONF_REF))
#set($OO_CONF_OBJ = $OO_CONF_DOC.getObject('XWikiOnlyOfficeCode.ConfigurationClass'))
#set($OO_USE_GLOBAL_CONFIG = $OO_CONF_OBJ.getProperty('useGlobalConfig').value)
#if ("$!OO_USE_GLOBAL_CONFIG" != '0')
  #set($OO_CONF_REF = $services.model.createDocumentReference($xcontext.mainWikiName, 'XWikiOnlyOfficeCode', 'ConfigurationClass'))
  #set($OO_CONF_DOC = $xwiki.getDocument($OO_CONF_REF))
  #set($OO_CONF_OBJ = $OO_CONF_DOC.getObject('XWikiOnlyOfficeCode.ConfigurationClass'))
#end
// this file is copied into the JSExtension object when producing the XAR
// it should fire everytime a view page is displayed
require(['jquery'],function($) {
  var enableCreation = "$!OO_CONF_OBJ.getProperty('enableCreation').getValue()" == '1';

  var fullName = XWiki.Document.currentDocumentReference.toString();

  var getExistingNames = function() {
    return $('#_attachments span.name a').toArray().map(function(a) {
      return a.innerText;
    });
  };

  // Create untitled documents when no name is given
  var getDefaultName = function(fileType) {
    var untitledIndex = 1;
    var list = getExistingNames();
    var name = ({'.xlsx': 'Spreadsheet', '.docx': 'Document', '.pptx': 'Presentation' })[fileType] + ' ' + new Date().toString().split(' ').slice(0,4).join(' ');
    if (list.indexOf(name + fileType) === -1) {
      return name;
    }
    while (list.indexOf(name + ' - ' + untitledIndex + fileType) !== -1) {
      untitledIndex++; 
    }
    return name + ' - ' + untitledIndex;
  };

  // New attachment modal
  var displayPopupNew = function(type) {
    XWiki.widgets.NewOOFile = Class.create(XWiki.widgets.ModalPopup, {
      defaultInteractionParameters : {},
      /** Constructor. Registers the key listener that pops up the dialog. */
      initialize : function($super, interactionParameters) {
        this.interactionParameters = Object.extend(Object.clone(this.defaultInteractionParameters), interactionParameters || {});
        // call constructor from ModalPopup with params content, shortcuts, options
        $super(
          this.createContent(this.interactionParameters),
          {
            'show': {method : this.showDialog, keys: []},
            'close': {method : this.closeDialog, keys: ['Esc']}
          },
          {
            displayCloseButton: true,
            verticalPosition: 'top',
            backgroundColor: '#FFF',
            removeOnClose: true
          }
        );
        this.showDialog();
        this.setClass('my-modal-popup');
      },
      /** Get the content of the modal dialog using ajax */
      createContent : function() {
        var fileType = '.docx';
        var buttonType = 'btn-primary btn-ootext';
        if (type === 'spreadsheet') {
          fileType = '.xlsx';
          buttonType = 'btn-success btn-oosheet';
        } else if (type === 'presentation') {
          fileType = '.pptx';
          buttonType = 'btn-warning btn-ooprez';
        }
        var defaultName = getDefaultName(fileType);

        var queryString = $.param({
          'elem': 'modalContent',
          'type': type,
          'fileType': fileType,
          'buttonType': buttonType,
          'defaultName': defaultName
        });
        $.post(new XWiki.Document('UI', 'XWikiOnlyOfficeCode').getURL('get', queryString), function(data) {
          $('.xdialog-content').html(data);
        }).done(function() {
          $('.modal-popup').on('click', 'button', function() {
            var name = $('#oONewFileName').val().trim();
            if (name === '') {
              name = defaultName;
            }
            if (getExistingNames().indexOf(name + fileType) !== -1) {
              $('#oONewFileError').toggleClass('hidden');
            } else {
              var fileName = name + fileType;
              var queryString = $.param({
                'document': fullName,
                'filename': fileName,
                'new': 1,
                'xpage': 'plain'
              });
              var href = new XWiki.Document('XooEdit', 'XWikiOnlyOfficeCode').getURL('view', queryString)
              window.location.href = href;
            }
          });
        });
      }
    });
    new XWiki.widgets.NewOOFile();
  };

  var decorateWithXooButtons = function() {
    var hasEditRights = XWiki.hasEdit;
    var canDoByExt = { };

    ['docx', 'xlsx', 'pptx'].forEach(function(x) {
      canDoByExt[x] = 'edit';
    });
    ['xls', 'ods', 'csv', 'doc', 'odt', 'ppt', 'pps', 'odp', 'ppsx', 'rtf', 'txt', 'mht', 'html', 'htm'].forEach(function(x) {
      canDoByExt[x] = 'convert';
    });
    ['pdf', 'djvu', 'fb2', 'epub', 'xps'].forEach(function(x) {
      canDoByExt[x] = 'view';
    });

    $("#_attachments span.name").each(function(i, elem) {
      if ($(elem.parentNode).find('div.xwikibuttonlinks &gt; a.oOEdit').length) {
        return;
      }
      var fileName = $(elem).find('a').text().trim();
      var fileType = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();
      var whatCanDo = canDoByExt[fileType];
      if (!whatCanDo) {
        return;
      }
      if (!hasEditRights) {
        whatCanDo = 'view';
      }

      var queryString = $.param({
        'elem': 'oOActionButtons',
        'document': fullName,
        'filename': fileName,
        'whatCanDo': whatCanDo
      });

      $.post(new XWiki.Document('UI', 'XWikiOnlyOfficeCode').getURL('get', queryString), function(data) {
        $(data).insertBefore(elem);
      });
    });

    if (!enableCreation) {
      return;
    }
    if ($('#oOCreateButtons').length == 0) {
      // Add the buttons
      $.post(new XWiki.Document('UI', 'XWikiOnlyOfficeCode').getURL('get', 'elem=oOCreateButtons'), function(data) {
        $('#attachmentscontent').append(data);
      }).done(function() {
        // Button events
        $('#attachmentscontent').on('click', '.oONewText', function() {
          displayPopupNew('document');
        });
        $('#attachmentscontent').on('click', '.oONewSpreadsheet', function() {
          displayPopupNew('spreadsheet');
        });
        $('#attachmentscontent').on('click', '.oONewPresentation', function() {
          displayPopupNew('presentation');
        });
      });
    }
  };

  $(decorateWithXooButtons);
  $(document).on('xwiki:html5upload:fileFinished', decorateWithXooButtons);
  $(document).on('xwiki:docextra:loaded', decorateWithXooButtons);
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
  <object>
    <name>XWikiOnlyOfficeCode.XooEdit</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>e22156ad-05a2-4506-a7cf-81d80f8a98a2</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>/* Code to fix the design of the only office iframe.
 * Added the "ooFrame" id to the html element in order to isolate these rules from the XWiki ones. */
html#ooFrame {
  height: 100%;
  width: 100%;
}
#ooFrame body {
  background: #fff;
  color: #333;
  font-family: Arial, Tahoma,sans-serif;
  height: 100%;
  width: 100%;
  margin: 0;
  overflow-y: hidden;
  padding: 0;
  text-decoration: none;
  position: fixed;
  top: 0px;
  left: 0px;
  display: -webkit-flex; /* Safari */
  -webkit-flex-flow: column; /* Safari 6.1+ */
  display: -moz-flex;
  -moz-flex-flow: column;
  display: flex;
  flex-flow: column;
}
#ooFrame .saveBarTable {
  margin-bottom: 0px
}
#ooFrame .saveBarTable td {
  padding: 4px;
  padding-left: 13px;
}
#ooFrame .saveBar img {
  max-width: 6em;
  max-height: 3em;
}
#ooFrame .form {
  -webkit-flex: 1;
  -moz-flex: 1;
  flex: 1;
  position: relative;
}
#ooFrame .form &gt; iframe {
  position:absolute;
}
#ooFrame #iframeEditor {
  position: relative;
  top: 30%;
  text-align: center;
  font-weight: bold;
  font-style: italic;
}
#ooFrame div {
  margin: 0;
  padding: 0;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name>Code for Only Office frame (xwiki-onlyoffice.css)</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
  <object>
    <name>XWikiOnlyOfficeCode.XooEdit</name>
    <number>1</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>df6c2cc1-bcd3-45a5-81e1-19f32627ea49</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.btn-ootext {
  background-image: linear-gradient(#5a7dc9,#496cb8 50%,#385ba7);
  border: 1px solid #5477c3;
}
.btn-ootext:hover {
  background-image: linear-gradient(#496cb8,#385ba7 50%,#274a96);
  border: 1px solid #4366b2;
}
.btn-oosheet {
  background-image: linear-gradient(#8ca946,#7b9835 50%,#6a8724);
  border: 1px solid #86a340;
}
.btn-oosheet:hover {
  background-image: linear-gradient(#7b9835,#6a8724 50%,#507613);
  border: 1px solid #759229;
}
.btn-ooprez {
  background-image: linear-gradient(#dd682b,#cc571a 50%,#bb4809);
  border: 1px solid #d56223;
}
.btn-ooprez:hover {
  background-image: linear-gradient(#cc571a,#bb4809 50%,#aa3702);
  border: 1px solid #c45015;
}

.oobutton {
  padding-left: 5px;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name>General extension code</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
</xwikidoc>
